# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo Hello, world!
    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.

  check-quality:
    runs-on: ubuntu-latest
    name: A job to check my code quality
    steps:
    - name: Check code meets quality standards
    id: code-inspector
    uses: codeinspectorio/github-action@master
    with:
      # Token to checkout the repository.
      repo_token: ${{ secrets.GITHUB_TOKEN }}
      # Access key on Code Inspector
      code_inspector_access_key: ${{ secrets.CODE_INSPECTOR_ACCESS_KEY }}
      # Secret key on Code Inspector
      code_inspector_secret_key: ${{ secrets.CODE_INSPECTOR_SECRET_KEY }}
      # Minimum grade. Valid options are EXCELLENT, GOOD, NEUTRAL, WARNING, CRITICAL. Leave blank to ignore.
      min_quality_grade: 'WARNING'
      # Minimum quality score from 0 (worst) to 100 (best)
      min_quality_score: '50'
      # Maximum defect rate per line of code (e.g. 0.01 for 1 defect per 100 lines of code). Leave 0 to ignore.
      max_defects_rate: '0.0001'
      # Maximum number of complex functions rate (e.g. number of complex functions / number of functions). Leave 0 to ignore.
      max_complex_functions_rate: '0.0001'
      # Maximum number of long functions rate (e.g. number of long functions / number of functions). Leave 0 to ignore.
      max_long_functions_rate: '0.0001'
      # Project on code inspector. Will use the preferences of this analysis. Leave blank and no preferences are used
      project_name: '' 
      # Timeout before giving up (in case analysis takes too long). Default is 10 minutes
      max_timeout_sec: '600'
